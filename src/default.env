# Main configuration
: "${THIS_NAME:=example}"                # Base name for resources (e.g., namespace, domain)
: "${THIS_TLD:=com}"                    # Top-level domain (e.g., com, org)
: "${THIS_ADMIN_USER:=myadmin}"         # Default admin username for services
: "${VERBOSITY:=100}"                  # Verbosity level (100 = default, higher = more output)
: "${PARALLEL_JOBS:=1}"                # Number of parallel jobs for deployment
: "${BIG_LIST:=./src/big_list}"
: "${DEBUG:=0}"

# Cluster configuration
: "${THIS_K8S_TYPE:=kind}"             # Kubernetes type (kind or k3s)
: "${KIND_CONFIG_TPL:=src/kind-config.tpl}"
: "${THIS_CLUSTER_INGRESS:=nginx}"     # Ingress controller (nginx or traefik)
: "${THIS_CLUSTER_ISSUER:=mkcert-issuer}"  # Default certificate issuer
: "${THIS_TRAEFIK_METHOD:=helm}"
: "${THIS_TRAEFIK_HOST:=traefik}"

# Domain and namespace
: "${THIS_DOMAIN:=${THIS_NAME}.${THIS_TLD}}"  # Full domain (e.g., example.com)
: "${THIS_NAMESPACE:=${THIS_NAME}}"    # Kubernetes namespace
: "${THIS_SECRETS:=${THIS_NAME}-secrets}"  # Secret name for shared credentials
: "${KEY_FILE:=./.secrets/${THIS_SECRETS}-plain.yaml}"
: "${SECRET_FILE:=./.secrets/${THIS_SECRETS}.yaml}"
: "${THIS_ENABLE_PLAIN_SECRETS_FILE:='true'}"

# Email configuration
: "${THIS_OUT_SMTP_EMAIL:=${THIS_ADMIN_USER}@${THIS_DOMAIN}}"  # SMTP email address
: "${THIS_OUT_SMTP_HOST:=mail.${THIS_DOMAIN}}"  # SMTP server host
: "${THIS_OUT_SMTP_SENDER_NAME:=Testy McTesterson}"  # Email sender name
: "${THIS_OUT_SMTP_PORT:=587}"           # SMTP port
: "${THIS_OUT_SMTP_PASSWORD:=deadbeef123}"  # SMTP password (example placeholder)

# Storage configuration
: "${THIS_STORAGECLASS:=${THIS_NAMESPACE}-hostpath}"  # Default storage class
: "${THIS_LVM_VG:=${THIS_NAME}VG}"     # LVM volume group name
: "${THIS_STORAGE_PATH:=/mnt/${THIS_NAME}}"  # Base storage path

# ArgoCD configuration
: "${THIS_ARGO_HOST:=argocd}"          # ArgoCD host name
: "${THIS_ARGO_METHOD:=yaml}"          # Deployment method (yaml or helm)
#: "${THIS_ARGO_METHOD:=helm}"         # Uncomment to use Helm for ArgoCD
: "${THIS_REPO_URL:=https://github.com/DeployCoop/urban-disco.git}"  # Git repository URL

# BAO (Vault) configuration
: "${THIS_BAO_HOST:=bao}"              # BAO service host name
: "${THIS_BAOUI_HOST:=baoui}"          # BAO UI host name

# Drupal configuration
: "${THIS_DRUPAL_HOST:=drupal}"        # Drupal host name
: "${THIS_DRUPAL_ADMIN:=drupaladmin}"  # Drupal admin username
: "${THIS_DRUPAL_PASSWORD:=deadbeef123}"  # Drupal admin password (example placeholder)

# FOSSBilling configuration
: "${THIS_FOSSBILLING_HOST:=fossbilling}"  # FOSSBilling host name
: "${THIS_FOSSBILLING_PERSISTENCE_ENABLED:=false}"  # Enable persistent storage
: "${THIS_FOSSBILLING_SIZE:=1Gi}"      # Storage size for FOSSBilling
: "${THIS_FOSSBILLING_DB_SIZE:=1Gi}"   # Database storage size

# Harbor configuration
: "${THIS_HARBOR_HOST:=harbor}"        # Harbor host name
: "${THIS_HARBOR_FULLHOST:=${THIS_HARBOR_HOST}.${THIS_DOMAIN}}"  # Full Harbor URL
: "${THIS_HARBOR_URL:=https://${THIS_HARBOR_HOST}.${THIS_DOMAIN}}"  # Harbor API URL
: "${THIS_HARBOR_REGISTRY_STORAGE_SIZE:=25Gi}"  # Harbor registry storage
: "${THIS_HARBOR_JOB_STORAGE_SIZE:=2Gi}"  # Job service storage
: "${THIS_HARBOR_DB_STORAGE_SIZE:=8Gi}"  # Database storage
: "${THIS_HARBOR_REDIS_STORAGE_SIZE:=1Gi}"  # Redis storage
: "${THIS_HARBOR_TRIVY_STORAGE_SIZE:=5Gi}"  # Trivy storage
: "${THIS_HARBOR_USER:=thothbot}"      # Harbor admin user
: "${THIS_HARBOR_PASSWORD:=JABZGpUvrxUFIlqNR2zOKvoWnwinVWDx7}"  # Harbor admin password

# Keycloak configuration
: "${THIS_KEYCLOAK_HOST:=keycloak}"    # Keycloak host name
: "${THIS_KEYCLOAK_ADMIN_USER:=${THIS_ADMIN_USER}}"  # Keycloak admin user
: "${THIS_KEYCLOAK_ADMIN_PW:=keycloak_password123}"  # Keycloak admin password

# Kubegres (PostgreSQL) configuration
: "${POSTGRES_USER:=pgadmin}"          # PostgreSQL admin user

# KUBE_PROMETHEUS_STACK
: "${THIS_KUBE_PROMETHEUS_STACK_GRAFANA_HOST:=grafana}"
: "${THIS_GRAFANA_ADMIN_PASSWORD:=deadbeefgrafana123}"

# Kubeshark configuration
: "${THIS_KUBESHARK_HOST:=kubeshark}"  # Kubeshark host name
: "${THIS_KUBESHARK_STORAGE_SIZE:=5Gi}"  # Storage size for Kubeshark
: "${THIS_KUBESHARK_LICENSE=deadbeef123}"

# LDAP configuration
: "${THIS_LDAP_ORGANISATION:=${THIS_NAME} ${THIS_TLD}}"  # LDAP organization name
: "${THIS_LTB_HOST:=ltb}"              # LDAP host name
: "${THIS_PHPLDAPADMIN_HOST:=phpldapadmin}"  # phpLDAPadmin host name

# Let's Encrypt configuration
: "${THIS_LETSENCRYPT_EMAIL:=${THIS_OUT_SMTP_EMAIL}}"  # Let's Encrypt contact email

# Nextcloud configuration
: "${THIS_NC_HOST:=nextcloud}"         # Nextcloud host name
: "${THIS_NC_FQDN:=${THIS_NC_HOST}.${THIS_DOMAIN}}"  # Nextcloud FQDN
: "${THIS_NC_COLLABORA_HOST:=collabora}"  # Collabora host name
: "${THIS_NC_COLLABORA_FQDN:=${THIS_NC_COLLABORA_HOST}.${THIS_DOMAIN}}"  # Collabora FQDN
: "${THIS_NC_ADMIN_USER:=${THIS_ADMIN_USER}}"  # Nextcloud admin user
: "${THIS_NC_ADMIN_PASSWD:=idkvjrkxiczbk254}"  # Nextcloud admin password
: "${THIS_NC_CONFIG_PASSWD:=kckgjxiwkrn5nmw8xkt8}"  # Nextcloud config password
: "${THIS_NC_PG_USER:=${THIS_ADMIN_USER}}"  # PostgreSQL user for Nextcloud
: "${THIS_NC_PG_DB:=nextcloud}"        # PostgreSQL database for Nextcloud

# NextJS Docker configuration
: "${THIS_NEXTJS_DOCKER_HOST:=nextjsdocker}"  # NextJS Docker host name
: "${THIS_EXTERNAL_REGISTRY_SECRET:=${THIS_NEXTJS_DOCKER_HOST}.${THIS_DOMAIN}.cred}"  # Docker registry secret name
: "${THIS_EXTERNAL_REGISTRY_HOST:=https://<your-registry>}"  # External registry URL (customize this)
: "${THIS_EXTERNAL_REGISTRY_USERNAME:=bot}"  # Docker registry username
: "${THIS_EXTERNAL_REGISTRY_PASS:=deadbeef12345343}"  # Docker registry password
: "${THIS_EXTERNAL_REGISTRY_EMAIL:=bot@example.com}"  # Docker registry email

# OpenProject configuration
: "${THIS_OPENPROJECT_HOST:=openproject}"  # OpenProject host name
: "${THIS_OPENPROJECT_ADMIN_CRED_SECRET:=openproject-${THIS_NAME}-admin-cred}"
: "${THIS_OPENPROJECT_ADMIN_USER:=${THIS_ADMIN_USER}}"
: "${THIS_OPENPROJECT_ADMIN_PASSWORD:=deadbeef123}"
: "${THIS_OPENPROJECT_ADMIN_EMAIL:=${THIS_ADMIN_USER}@${THIS_NAME}.${THIS_TLD}}"
: "${THIS_OPENPROJECT_STORAGE_SIZE:=2Gi}"  # Storage size for OpenProject
: "${THIS_OPENSEARCH_SVC_HOST:=https://opensearch-cluster-master.${THIS_NAMESPACE}.svc.cluster.local:9200}"
# This bundled should be set to true or false and will determine 
# whether openproject uses the bundled postgres or the external
# defaulting to true for now because of
# https://github.com/opf/helm-charts/issues/208
: "${THIS_OPENPROJECT_POSTGRES_BUNDLED:=true}"
: "${THIS_OPENPROJECT_POSTGRES_USER:=${THIS_NAME}op}"  # PostgreSQL user
: "${THIS_OPENPROJECT_POSTGRES_DB:=${THIS_NAME}opdb}"  # PostgreSQL database

# OpenSearch configuration
: "${THIS_OPENSEARCH_HOST:=opensearch}"
: "${THIS_OPENSEARCH_DASH_HOST:=opensearch-dashboards}"
: "${THIS_OPENSEARCH_VERSION:=2.19.2}"
: "${THIS_OPENSEARCH_ADMIN_CRED_SECRET:=opensearch-${THIS_NAME}-admin-cred}"
: "${THIS_OPENSEARCH_ADMIN_USER:=opensearchadmin}"
: "${THIS_OPENSEARCH_ADMIN_PASSWORD:=deadbeef123}"
: "${THIS_OPENSEARCH_DASHUSER_USER:=opensearchdash}"
: "${THIS_OPENSEARCH_DASH_MEM_REQ:=512Mi}"  # Dashboard memory request
: "${THIS_OPENSEARCH_DASH_CPU_REQ:=200m}"  # Dashboard CPU request
: "${THIS_OPENSEARCH_DASH_MEM_LIM:=512Mi}"  # Dashboard memory limit
: "${THIS_OPENSEARCH_DASH_CPU_LIM:=200m}"  # Dashboard CPU limit
: "${THIS_OPENSEARCH_NODEPOOL_DISK_SIZE:=5Gi}"
: "${THIS_OPENSEARCH_NODEPOOL_MEM_REQ:=512Mi}"  # Node pool memory request
: "${THIS_OPENSEARCH_NODEPOOL_CPU_REQ:=200m}"  # Node pool CPU request
: "${THIS_OPENSEARCH_NODEPOOL_MEM_LIM:=512Mi}"  # Node pool memory limit
: "${THIS_OPENSEARCH_NODEPOOL_CPU_LIM:=200m}"  # Node pool CPU limit

# Supabase configuration
: "${THIS_SUPA_HOST:=supa}"            # Supabase host name
: "${THIS_SUPA_SUPABASE_PUBLIC_URL:=http://${THIS_SUPA_HOST}.${THIS_DOMAIN}/}"  # Supabase public URL
: "${THIS_SUPA_ANALYTICS_APIKEY:=deadbeef1234567890}"  # Analytics API key
: "${THIS_SUPA_ANON_KEY:=bigdeadbeef01}"  # Supabase anon key
: "${THIS_SUPA_API_EXTERNAL_URL:=${THIS_SUPA_SUPABASE_PUBLIC_URL}}"  # External API URL
: "${THIS_SUPA_DASHBOARD_USERNAME:=${THIS_ADMIN_USER}}"  # Dashboard username
: "${THIS_SUPA_DASHBOARD_PASSWORD:=deadbeef1234}"  # Dashboard password
: "${THIS_SUPA_DB_USERNAME:=supauser}"  # PostgreSQL username
: "${THIS_SUPA_DB_PASSWORD:=deadbeef123456}"  # PostgreSQL password
: "${THIS_SUPA_DB_DATABASE:=supadb}"   # PostgreSQL database
: "${THIS_SUPA_GOTRUE_SITE_URL:=${THIS_SUPA_SUPABASE_PUBLIC_URL}}"  # GoTrue site URL
: "${THIS_SUPA_GOTRUE_SMTP_ADMIN_EMAIL:=${THIS_OUT_SMTP_EMAIL}}"  # SMTP admin email
: "${THIS_SUPA_GOTRUE_SMTP_HOST:=${THIS_OUT_SMTP_HOST}}"  # SMTP host
: "${THIS_SUPA_GOTRUE_SMTP_PORT:=${THIS_OUT_SMTP_PORT}}"  # SMTP port
: "${THIS_SUPA_GOTRUE_SMTP_SENDER_NAME:=${THIS_OUT_SMTP_SENDER_NAME}}"  # SMTP sender name
: "${THIS_SUPA_SMTP_USERNAME:=${THIS_OUT_SMTP_EMAIL}}"  # SMTP username
: "${THIS_SUPA_SMTP_PASSWORD:=${THIS_OUT_SMTP_PASSWORD}}"  # SMTP password
: "${THIS_SUPA_SECRET:=deadbeefed}"    # Supabase secret
: "${THIS_SUPA_SERVICEKEY:=bigdeadbeef}"  # Service key
: "${THIS_SUPA_STUDIO_DEFAULT_ORGANIZATION:=${THIS_NAME}_${THIS_TLD}}"  # Studio default organization
: "${THIS_SUPA_STUDIO_DEFAULT_PROJECT:=${THIS_NAME}_${THIS_TLD}}"  # Studio default project
