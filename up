#!/usr/bin/env bash
: "${BIG_LIST:=./src/big_list}"
source ./src/sourceror.bash
export this_cwd=$(pwd)

main () {
  set -e
  src/secrets.sh
  if [[ $THIS_K8S_TYPE == "kind" ]]; then
    src/kindDown.sh
    sleep 1
    if [[ ${THIS_REG_ENABLE} == "true" ]]; then
      src/localregistry_start.sh
    fi
    src/kindUp.sh
    if [[ ${THIS_REG_ENABLE} == "true" ]]; then
      #src/registry-proxy.sh
      src/localregistry_setupnodes.sh
    fi
  elif [[ $THIS_K8S_TYPE == "k3d" ]]; then
    src/k3dDown.sh
    sleep 1
    src/k3dUp.sh
  elif [[ $THIS_K8S_TYPE == "k3s" ]]; then
    kubectl get nodes
    if [[ $? == 0 ]]; then
      echo "kube cluster is installed, proceeding"
    else
      echo "kube cluster is not installed, exiting"
      exit 1
    fi
  else
    echo "THIS_K8S_TYPE is not set, aborting!"
    exit 1
  fi
  set -eu
  set -x
  initializer "$this_cwd/init/cluster"

  # certmanager
  src/certmanager.sh

  kubectl apply -f .secrets/${THIS_SECRETS}.yaml
  if [[ ${THIS_CLUSTER_INGRESS} == "traefik" ]]; then
    src/traefik.sh
  elif [[ ${THIS_CLUSTER_INGRESS} == "nginx" ]]; then
    src/nginx.sh
  else
    echo 'unrecognized ingress'
    exit 1
  fi
  if [[ $THIS_K8S_TYPE == "kind" ]]; then
    echo 'kind'
  elif [[ $THIS_K8S_TYPE == "k3d" ]]; then
    echo 'k3d'
  else
    echo 'k3s'
  fi

  # argoCD
  src/argocd.sh
  #openEBS
  src/openebs.sh
  # kubegres
  src/kubegres.sh
  src/keycloak.sh
  src/dockerCreds.sh
  para_runner "${BIG_LIST}"
}

time main
